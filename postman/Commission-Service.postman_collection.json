{
	"info": {
		"_postman_id": "commission-service-collection",
		"name": "Payment Commission Service",
		"description": "Complete API collection for the Payment Commission microservice. Includes endpoints for commission calculation, rule management, and revenue reporting.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "commission-api"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8086",
			"type": "string"
		},
		{
			"key": "apiVersion",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "{{$randomUUID}}",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Commissions",
			"description": "Commission fee calculation endpoints",
			"item": [
				{
					"name": "Calculate Transaction Fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success flag\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Response contains commission amount\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('commissionAmount');",
									"    pm.expect(jsonData.data.commissionAmount).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 10000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"LEVEL_1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Calculate commission fee for a transaction based on active rules. Matches rules by currency, transfer type, transaction amount, and KYC level."
					},
					"response": [
						{
							"name": "Calculate Fee - Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 10000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"LEVEL_1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Transaction fee calculated successfully\",\n  \"data\": {\n    \"amount\": 10000,\n    \"currency\": \"XOF\",\n    \"commissionAmount\": 550,\n    \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n    \"transferType\": \"SAME_WALLET\",\n    \"calculationDetails\": {\n      \"percentageFee\": 50,\n      \"fixedFee\": 500,\n      \"appliedPercentage\": 0.005\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Calculate BCEAO Fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains BCEAO fee calculation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('commissionAmount');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/bceao-fee/10000",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "bceao-fee", "10000"]
						},
						"description": "Calculate fee using BCEAO standard rules:\n- FREE for amounts â‰¤ 5000 XOF\n- 100 XOF + 0.5% (max 1000 XOF) for amounts > 5000 XOF"
					},
					"response": [
						{
							"name": "BCEAO Fee - Free Tier",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/bceao-fee/5000",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "bceao-fee", "5000"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"BCEAO fee calculated successfully\",\n  \"data\": {\n    \"amount\": 5000,\n    \"currency\": \"XOF\",\n    \"commissionAmount\": 0,\n    \"rule\": \"BCEAO_FREE\"\n  }\n}"
						},
						{
							"name": "BCEAO Fee - Standard",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/bceao-fee/10000",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "bceao-fee", "10000"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"BCEAO fee calculated successfully\",\n  \"data\": {\n    \"amount\": 10000,\n    \"currency\": \"XOF\",\n    \"commissionAmount\": 150,\n    \"rule\": \"BCEAO_STANDARD\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Commission Rules",
			"description": "Commission rule management endpoints (CRUD operations)",
			"item": [
				{
					"name": "Create Commission Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Rule created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.data).to.have.property('ruleId');",
									"});",
									"",
									"// Save ruleId for other requests",
									"var jsonData = pm.response.json();",
									"if (jsonData.data && jsonData.data.ruleId) {",
									"    pm.collectionVariables.set('ruleId', jsonData.data.ruleId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"description": "User ID for audit tracking"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"minTransaction\": 5001,\n  \"maxTransaction\": 50000,\n  \"kycLevel\": \"ANY\",\n  \"percentage\": 0.005,\n  \"fixedAmount\": 100,\n  \"minAmount\": 100,\n  \"maxAmount\": 1000,\n  \"priority\": 90,\n  \"description\": \"Standard fee for same wallet transfers\",\n  \"notes\": \"Created via Postman API\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules"]
						},
						"description": "Create a new commission rule. Requires admin privileges."
					},
					"response": [
						{
							"name": "Create Rule - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-User-ID",
										"value": "{{userId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"minTransaction\": 5001,\n  \"maxTransaction\": 50000,\n  \"kycLevel\": \"ANY\",\n  \"percentage\": 0.005,\n  \"fixedAmount\": 100,\n  \"minAmount\": 100,\n  \"maxAmount\": 1000,\n  \"priority\": 90,\n  \"description\": \"Standard fee for same wallet transfers\",\n  \"notes\": \"Created via Postman API\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules"]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rule created successfully\",\n  \"data\": {\n    \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n    \"currency\": \"XOF\",\n    \"transferType\": \"SAME_WALLET\",\n    \"minTransaction\": 5001,\n    \"maxTransaction\": 50000,\n    \"kycLevel\": \"ANY\",\n    \"percentage\": 0.005,\n    \"fixedAmount\": 100,\n    \"minAmount\": 100,\n    \"maxAmount\": 1000,\n    \"isActive\": true,\n    \"priority\": 90,\n    \"effectiveFrom\": \"2025-10-20T10:30:00\",\n    \"effectiveTo\": null,\n    \"description\": \"Standard fee for same wallet transfers\",\n    \"notes\": \"Created via Postman API\",\n    \"createdAt\": \"2025-10-20T10:30:00\",\n    \"updatedAt\": \"2025-10-20T10:30:00\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get All Commission Rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains paginated data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('content');",
									"    pm.expect(jsonData.data).to.have.property('totalElements');",
									"    pm.expect(jsonData.data).to.have.property('totalPages');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules?page=0&size=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules"],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Page number (0-indexed)"
								},
								{
									"key": "size",
									"value": "20",
									"description": "Page size"
								}
							]
						},
						"description": "Retrieve all commission rules with pagination support."
					},
					"response": [
						{
							"name": "Get All Rules - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules?page=0&size=20",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules"],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rules retrieved successfully\",\n  \"data\": {\n    \"content\": [\n      {\n        \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n        \"currency\": \"XOF\",\n        \"transferType\": \"SAME_WALLET\",\n        \"percentage\": 0.005,\n        \"fixedAmount\": 100,\n        \"isActive\": true,\n        \"priority\": 90\n      }\n    ],\n    \"page\": 0,\n    \"size\": 20,\n    \"totalElements\": 45,\n    \"totalPages\": 3\n  }\n}"
						}
					]
				},
				{
					"name": "Get Rules by Currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains rules array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/currency/XOF",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "currency", "XOF"]
						},
						"description": "Retrieve all commission rules for a specific currency (both active and inactive)."
					},
					"response": [
						{
							"name": "Get Rules by Currency - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/currency/XOF",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "currency", "XOF"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rules retrieved successfully\",\n  \"data\": [\n    {\n      \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n      \"currency\": \"XOF\",\n      \"transferType\": \"SAME_WALLET\",\n      \"percentage\": 0.005,\n      \"fixedAmount\": 100,\n      \"isActive\": true,\n      \"priority\": 90\n    },\n    {\n      \"ruleId\": \"e3a1f2dd-7d65-5c12-91f7-e812859g1962\",\n      \"currency\": \"XOF\",\n      \"transferType\": \"CROSS_WALLET\",\n      \"percentage\": 0.01,\n      \"fixedAmount\": 200,\n      \"isActive\": false,\n      \"priority\": 80\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Active Rules by Currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains rules array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"All rules are active\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.data.forEach(function(rule) {",
									"        pm.expect(rule.isActive).to.eql(true);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/currency/XOF/active",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "currency", "XOF", "active"]
						},
						"description": "Retrieve only active commission rules for a specific currency. These are the rules currently in effect."
					},
					"response": [
						{
							"name": "Get Active Rules by Currency - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/currency/XOF/active",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "currency", "XOF", "active"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rules retrieved successfully\",\n  \"data\": [\n    {\n      \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n      \"currency\": \"XOF\",\n      \"transferType\": \"SAME_WALLET\",\n      \"percentage\": 0.005,\n      \"fixedAmount\": 100,\n      \"minAmount\": 100,\n      \"maxAmount\": 1000,\n      \"isActive\": true,\n      \"priority\": 90,\n      \"effectiveFrom\": \"2025-10-20T10:30:00\",\n      \"effectiveTo\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Commission Rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Rule retrieved successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.data).to.have.property('ruleId');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/{{ruleId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "{{ruleId}}"]
						},
						"description": "Retrieve a specific commission rule by its ID."
					},
					"response": [
						{
							"name": "Get Rule by ID - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/d290f1ee-6c54-4b01-90e6-d701748f0851",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "d290f1ee-6c54-4b01-90e6-d701748f0851"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rule retrieved successfully\",\n  \"data\": {\n    \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n    \"currency\": \"XOF\",\n    \"transferType\": \"SAME_WALLET\",\n    \"minTransaction\": 5001,\n    \"maxTransaction\": 50000,\n    \"kycLevel\": \"ANY\",\n    \"percentage\": 0.005,\n    \"fixedAmount\": 100,\n    \"minAmount\": 100,\n    \"maxAmount\": 1000,\n    \"isActive\": true,\n    \"priority\": 90,\n    \"effectiveFrom\": \"2025-10-20T10:30:00\",\n    \"effectiveTo\": null,\n    \"description\": \"Standard fee for same wallet transfers\",\n    \"notes\": \"Created via Postman API\",\n    \"createdAt\": \"2025-10-20T10:30:00\",\n    \"updatedAt\": \"2025-10-20T10:30:00\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Commission Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Rule updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"percentage\": 0.006,\n  \"fixedAmount\": 150,\n  \"minAmount\": 150,\n  \"maxAmount\": 1200,\n  \"isActive\": true,\n  \"priority\": 95,\n  \"description\": \"Updated standard fee\",\n  \"notes\": \"Fee increased by 20%\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/{{ruleId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "{{ruleId}}"]
						},
						"description": "Update an existing commission rule. All fields are optional."
					},
					"response": [
						{
							"name": "Update Rule - Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"percentage\": 0.006,\n  \"fixedAmount\": 150,\n  \"minAmount\": 150,\n  \"maxAmount\": 1200,\n  \"isActive\": true,\n  \"priority\": 95,\n  \"description\": \"Updated standard fee\",\n  \"notes\": \"Fee increased by 20%\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/d290f1ee-6c54-4b01-90e6-d701748f0851",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "d290f1ee-6c54-4b01-90e6-d701748f0851"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rule updated successfully\",\n  \"data\": {\n    \"ruleId\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n    \"currency\": \"XOF\",\n    \"transferType\": \"SAME_WALLET\",\n    \"percentage\": 0.006,\n    \"fixedAmount\": 150,\n    \"minAmount\": 150,\n    \"maxAmount\": 1200,\n    \"isActive\": true,\n    \"priority\": 95,\n    \"updatedAt\": \"2025-10-20T11:45:00\"\n  }\n}"
						}
					]
				},
				{
					"name": "Activate Commission Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Rule activated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/{{ruleId}}/activate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "{{ruleId}}", "activate"]
						},
						"description": "Activate a previously deactivated commission rule."
					},
					"response": [
						{
							"name": "Activate Rule - Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/d290f1ee-6c54-4b01-90e6-d701748f0851/activate",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "d290f1ee-6c54-4b01-90e6-d701748f0851", "activate"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rule activated successfully\"\n}"
						}
					]
				},
				{
					"name": "Deactivate Commission Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Rule deactivated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/{{ruleId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "rules", "{{ruleId}}"]
						},
						"description": "Deactivate a commission rule (soft delete). The rule will not be used for new commission calculations."
					},
					"response": [
						{
							"name": "Deactivate Rule - Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/rules/d290f1ee-6c54-4b01-90e6-d701748f0851",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "rules", "d290f1ee-6c54-4b01-90e6-d701748f0851"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Commission rule deactivated successfully\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Revenue Reports",
			"description": "Commission revenue reporting endpoints",
			"item": [
				{
					"name": "Get Revenue Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Report contains revenue data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('totalRevenue');",
									"    pm.expect(jsonData.data).to.have.property('transactionCount');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/revenue?startDate=2025-10-01&endDate=2025-10-31&groupBy=DAY",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "revenue"],
							"query": [
								{
									"key": "providerId",
									"value": "{{$randomUUID}}",
									"description": "Filter by provider ID (optional)",
									"disabled": true
								},
								{
									"key": "currency",
									"value": "XOF",
									"description": "Filter by currency (optional)",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2025-10-01",
									"description": "Report start date (YYYY-MM-DD)"
								},
								{
									"key": "endDate",
									"value": "2025-10-31",
									"description": "Report end date (YYYY-MM-DD)"
								},
								{
									"key": "groupBy",
									"value": "DAY",
									"description": "Group by: PROVIDER, CURRENCY, DAY, MONTH"
								}
							]
						},
						"description": "Generate commission revenue report for specified period with optional filtering and grouping."
					},
					"response": [
						{
							"name": "Revenue Report - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/revenue?startDate=2025-10-01&endDate=2025-10-31&groupBy=DAY",
									"host": ["{{baseUrl}}"],
									"path": ["api", "{{apiVersion}}", "commissions", "revenue"],
									"query": [
										{
											"key": "startDate",
											"value": "2025-10-01"
										},
										{
											"key": "endDate",
											"value": "2025-10-31"
										},
										{
											"key": "groupBy",
											"value": "DAY"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Revenue report generated successfully\",\n  \"data\": {\n    \"reportPeriod\": {\n      \"startDate\": \"2025-10-01\",\n      \"endDate\": \"2025-10-31\"\n    },\n    \"totalRevenue\": 1250000,\n    \"transactionCount\": 850,\n    \"averageCommission\": 1470,\n    \"byDay\": [\n      {\n        \"date\": \"2025-10-01\",\n        \"revenue\": 45000,\n        \"count\": 30\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get Revenue Report - By Currency",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/revenue?startDate=2025-10-01&endDate=2025-10-31&currency=XOF&groupBy=CURRENCY",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "revenue"],
							"query": [
								{
									"key": "startDate",
									"value": "2025-10-01"
								},
								{
									"key": "endDate",
									"value": "2025-10-31"
								},
								{
									"key": "currency",
									"value": "XOF"
								},
								{
									"key": "groupBy",
									"value": "CURRENCY"
								}
							]
						},
						"description": "Get revenue report filtered by currency and grouped by currency."
					},
					"response": []
				},
				{
					"name": "Get Revenue Report - By Provider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/revenue?startDate=2025-10-01&endDate=2025-10-31&groupBy=PROVIDER",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "revenue"],
							"query": [
								{
									"key": "startDate",
									"value": "2025-10-01"
								},
								{
									"key": "endDate",
									"value": "2025-10-31"
								},
								{
									"key": "groupBy",
									"value": "PROVIDER"
								}
							]
						},
						"description": "Get revenue report grouped by provider."
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenarios",
			"description": "Pre-configured test scenarios combining multiple requests",
			"item": [
				{
					"name": "Scenario: Small Transaction (Free Tier)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 3000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"ANY\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Test fee calculation for small transaction (should use free tier if available)"
					},
					"response": []
				},
				{
					"name": "Scenario: Medium Transaction (Standard Fee)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 25000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"LEVEL_2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Test fee calculation for medium transaction with LEVEL_2 KYC"
					},
					"response": []
				},
				{
					"name": "Scenario: Large Transaction (VIP Rate)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 250000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"LEVEL_3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Test fee calculation for large transaction with highest KYC level"
					},
					"response": []
				},
				{
					"name": "Scenario: Cross-Wallet Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 50000,\n  \"currency\": \"XOF\",\n  \"transferType\": \"CROSS_WALLET\",\n  \"kycLevel\": \"LEVEL_1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Test fee calculation for cross-wallet transfer"
					},
					"response": []
				},
				{
					"name": "Scenario: XAF Currency Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 30000,\n  \"currency\": \"XAF\",\n  \"transferType\": \"SAME_WALLET\",\n  \"kycLevel\": \"LEVEL_2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/{{apiVersion}}/commissions/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "{{apiVersion}}", "commissions", "calculate"]
						},
						"description": "Test fee calculation for XAF currency"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"// You can add common headers or authentication logic here"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"// Common assertions for all requests",
					"pm.test(\"Response time is acceptable\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"pm.test(\"Content-Type is application/json\", function () {",
					"    pm.response.to.have.header(\"Content-Type\");",
					"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
					"});"
				]
			}
		}
	]
}